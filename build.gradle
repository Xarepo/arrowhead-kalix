buildscript {
    repositories {
        mavenCentral()
    }
}

allprojects {
    repositories {
        mavenCentral()
    }
}

subprojects {
    group = 'se.arkalix'
    version = '0.1.0'

    tasks.withType(JavaCompile) {
        sourceCompatibility = '11'
        targetCompatibility = '11'
    }
}

configure([
        project(':kalix-base'),
        project(':kalix-core-plugins'),
        project(':kalix-processors')
]) {
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    afterEvaluate {
        java {
            withJavadocJar()
            withSourcesJar()
        }
        publishing {
            publications {
                mavenJava(MavenPublication) {
                    from components.java
                }
            }
        }
    }

    publishing {
        repositories {
            maven {
                credentials {
                    // The RHS variables are collected from the user gradle.properties file.
                    username = arkalixJiraUsername
                    password = arkalixJiraPassword
                }
                def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
        publications {
            mavenJava(MavenPublication) {
                pom {
                    url = 'https://arkalix.se'
                    licenses {
                        license {
                            name = 'The Eclipse Public License, Version 2.0'
                            url = 'https://www.eclipse.org/legal/epl-2.0/'
                        }
                    }
                    developers {
                        developer {
                            id = 'emanuelpalm'
                            name = 'Emanuel Palm'
                            email = 'emanuel.palm@arkalix.se'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/emanuelpalm/arrowhead-kalix.git'
                        developerConnection = 'scm:git:ssh://github.com/emanuelpalm/arrowhead-kalix.git'
                        url = 'http://github.com/emanuelpalm/arrowhead-kalix/'
                    }
                }
            }
        }
    }

    signing {
        sign publishing.publications.mavenJava
    }

    afterEvaluate {
        javadoc {
            if (JavaVersion.current().isJava9Compatible()) {
                options.addBooleanOption('html5', true)
            }
            exclude '**/internal/**'
        }

        sourcesJar {
            exclude '**/internal/**'
        }
    }
}

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.allTasks.any { it instanceof Sign }) {
        def console = System.console()
        console.printf("\nSignatures required. Using the following details from gradle.properties:\n")

        // The RHS variables are collected from the user gradle.properties file.
        def keyId = arkalixSigningKeyId
        def file = arkalixSigningSecretKeyRingFile
        def password = arkalixSigningPassword

        console.printf("PGP Key Id: %s\n", keyId)
        console.printf("PGP Secret Key Ring File: %s\n", file)
        console.printf("PGP Private Key Password: ***\n\n")

        allprojects {
            ext."signing.keyId" = keyId
            ext."signing.secretKeyRingFile" = file
            ext."signing.password" = password
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
